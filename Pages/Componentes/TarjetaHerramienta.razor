@inject IHttpClientFactory factory
@inject NavigationManager _navigationManager
@inject IJSRuntime js

<link rel="stylesheet" href="/css/TarjetaLenguajeStyle.css" />

<div class="col-4 col-md-4">
    <div class="row">
        <div id="imgContainer" class="col-12 col-md-12">
            <img src="@herramienta.Imagen" />
        </div>
    </div>

    <div id="titleContainer" class="row">
        <div class="col-6 col-md-6">
            <b>@herramienta.Nombre</b>
        </div>
    </div>

    <div id="descriptionContainer" class="row">
        <div class="col-12 col-md-12">
            <div class="overflow-auto">
                <p>
                    @herramienta.Descripcion
                </p>
            </div>            
        </div>
    </div>

    <div id="buttonContainer" class="row">
        <div class="col-4 col-md-4">
            <a href="@herramienta.Enlace" target="_blank" class="btn btn-primary">Descargar</a>
            @*<button type="button" @onclick="leerMas" class="btn btn-primary">Descargar</button>*@
        </div>
        @if(logged)
        {
            <div class="col-4 col-md-4">
                <button type="button" @onclick="EliminarLenguaje" class="btn btn-danger">Eliminar</button>
            </div>
        }
        <div class="col-4 col-md-4">
            <p>@herramienta.Precio</p>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public HerammientumConsultar herramienta { get; set; }

    public bool logged { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {         
            var log = await js.InvokeAsync<string>("readLocalStorage", "Logged");
            logged = log != null ? Convert.ToBoolean(log) : false;
            StateHasChanged();
        }
    }

    public async void EliminarLenguaje()
    {
        var client = factory.CreateClient("api");
        var response = await client.DeleteAsync($"Herramientas?id={herramienta.Herramientaid}");
        var content = await response.Content.ReadAsStringAsync();

        _navigationManager.NavigateTo("/herramientas", true);
    }    
}
